WRITE A BLOG ON THE DIFFERENCE BETWEEN DOCUMENT & WINDOW OBJECT 

=> DOCUMENT OBJECT 

* The document object represent a web page that is loaded in the browser. By accessing the document object, we can access the element in the HTML page. 
With the help of document objects,we can add dynamic content to our web page. The document object can be accessed with a window.document or just document.

* SYNTAX - document.property_name;

Properties of DOCUMENT

* activeElement: It returns the currently active elements in the document.

* body: It returns the contents of the body element.

* baseURI: It returns a string value that represents the base URI of the document.

* cookie: It returns the cookie of the current document.

* defaultView: It returns the current Window Object.

* designMode: It is used to set documents as editable or read-only.

* domain: It returns the domain name of the document server.

* doctype: It returns the document’s doctype.

* URL: It returns the complete URL of the document.embeds: It returns the collection of all embedded elements.



=> WINDOWS OBJECT 

* WThe window object is the topmost object of the DOM hierarchy. It represents a browser window or frame that displays the contents of the webpage.
Whenever a window appears on the screen to display the contents of the document, the window object is created. 

* SYNTAX - window.property_name;

Properties of WINDOWS

* Closed: It holds a Boolean value that represents whether the window is closed or not.

* console: It returns a reference to the console object which provides access to the browser’s debugging console.

* defaultStatus: It is used to define the default message that will be displayed in the status bar when no activity is carried on by the browser.

* controllers: It returns the XUL controller objects for the current Chrome window.

* customElements: It returns a reference to the CustomElementRegistry object, which can be used to register new custom elements and also get information about already registered custom elements.

* crypto: It returns the browser crypto object

* Document: It returns a reference to the document object of that window.

* DOMMatrix: It returns a reference to a DOMMatrix object, which represents 4×4 matrices, suitable for 2D and 3D operations.

* frames[]: It represents an array that contains all the frames of a given window.

* DOMPoint: It returns a reference to a DOMPoint object, which represents a 2D or 3D point in a coordinate system.

* Toolbar: It will result in the toolbar object, whose visibility can be toggled in the window.

* Screen: It refers to the screen object